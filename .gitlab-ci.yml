include:
  - project: muni-kypo-images/ci-cd-virtual-images
    file: .gitlab-ci-template.yml

variables:
  NAME: "ubuntu"
  TYPE: "linux"
  DISTRO: "ubuntu"
  GUI_ACCESS: "false"
  TF_ROOT: ${CI_PROJECT_DIR}
  TF_STATE_NAME: default
  TF_VAR_NAME: ${NAME}
  TF_VAR_TYPE: ${TYPE}
  TF_VAR_DISTRO: ${DISTRO}
  TF_VAR_GUI_ACCESS: ${GUI_ACCESS}
  TF_VAR_ACCESS_TOKEN: ${ACCESS_TOKEN}
  TF_VAR_CI_SERVER_HOST: ${CI_SERVER_HOST}

workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $GITLAB_USER_NAME == "Service KYPO Images"
      when: never
    - when: always

test-qemu:
  tags: []
  image: registry.gitlab.com/gitlab-org/terraform-images/releases/1.4:v1.0.0
  script:
    - gitlab-terraform plan
    - gitlab-terraform apply
  resource_group: ${TF_STATE_NAME}
  environment:
    name: $TF_STATE_NAME
    on_stop: test-qemu-destroy
    auto_stop_in: 1 week
  cache:
    key: "${TF_ROOT}"
    paths:
      - ${TF_ROOT}/.terraform/
  artifacts:
    paths:
      - ${TF_ROOT}/user-ansible.txt
      - ${TF_ROOT}/networking-ansible.txt
      - ${TF_ROOT}/terraform.txt

test-qemu-destroy:
  stage: test
  script:
    - gitlab-terraform destroy
  resource_group: ${TF_STATE_NAME}
  environment:
    name: $TF_STATE_NAME
    action: stop
  cache:
    key: "${TF_ROOT}"
    paths:
      - ${TF_ROOT}/.terraform/
  when: manual

test-vbox:
  stage: test
  script:
    - vagrant box add --name mybox target-vbox/package.box
    - vagrant up
  resource_group: virtual-machine
  needs: ["build-vbox"]